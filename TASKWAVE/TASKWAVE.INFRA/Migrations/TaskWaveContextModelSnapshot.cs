// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TASKWAVE.API.Infrastructure.Data;

#nullable disable

namespace TASKWAVE.ENTITY.Migrations
{
    [DbContext(typeof(TaskWaveContext))]
    partial class TaskWaveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Acesso", b =>
                {
                    b.Property<int>("IdAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ACESSO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAcesso"));

                    b.Property<DateTime>("DataCriacaoAcesso")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CRIACAO_ACESSO");

                    b.Property<string>("DescricaoAcesso")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO_ACESSO");

                    b.Property<string>("NomeAcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_ACESSO");

                    b.HasKey("IdAcesso");

                    b.ToTable("TB_ACESSO", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Ambiente", b =>
                {
                    b.Property<int>("IdAmbiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_AMBIENTE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAmbiente"));

                    b.Property<string>("DescricaoAmbiente")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO_AMBIENTE");

                    b.Property<string>("NomeAmbiente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_AMBIENTE");

                    b.HasKey("IdAmbiente");

                    b.ToTable("TB_AMBIENTE", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Equipe", b =>
                {
                    b.Property<int>("IdEquipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_EQUIPE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipe"));

                    b.Property<string>("DescricaoEquipe")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO_EQUIPE");

                    b.Property<string>("NomeEquipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_EQUIPE");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.HasKey("IdEquipe");

                    b.HasIndex("SetorId");

                    b.ToTable("TB_EQUIPE", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.HistoricoTarefa", b =>
                {
                    b.Property<int>("IdHistoricoTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_HISTORICO_TAREFA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoricoTarefa"));

                    b.Property<DateTime>("DataMudancaTarefa")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_MUDANCA_TAREFA");

                    b.Property<string>("PrioridadeAnteriorTarefa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRIORIDADE_ANTERIOR_TAREFA");

                    b.Property<string>("PrioridadeAtualTarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRIORIDADE_ATUAL_TAREFA");

                    b.Property<string>("SituacaoAnteriorTarefa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SITUACAO_ANTERIOR_TAREFA");

                    b.Property<string>("SituacaoAtualTarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SITUACAO_ATUAL_TAREFA");

                    b.Property<int>("TarefaID")
                        .HasColumnType("int");

                    b.HasKey("IdHistoricoTarefa");

                    b.HasIndex("TarefaID");

                    b.ToTable("TB_HISTORICO_TAREFA", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Mensagem", b =>
                {
                    b.Property<int>("IdMensagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MENSAGEM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMensagem"));

                    b.Property<string>("ConteudoMensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTEUDO_MENSAGEM");

                    b.Property<DateTime>("DataEnvioMensagem")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ENVIO_MENSAGEM");

                    b.Property<int>("TarefaID")
                        .HasColumnType("int");

                    b.HasKey("IdMensagem");

                    b.HasIndex("TarefaID");

                    b.ToTable("TB_MENSAGEM", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Projeto", b =>
                {
                    b.Property<int>("IdProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PROJETO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjeto"));

                    b.Property<DateTime>("DataCriacaoProjeto")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CRIACAO_PROJETO");

                    b.Property<string>("DescricaoProjeto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO_PROJETO");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_PROJETO");

                    b.HasKey("IdProjeto");

                    b.ToTable("TB_PROJETO", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Setor", b =>
                {
                    b.Property<int>("IdSetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SETOR");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSetor"));

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoSetor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO_SETOR");

                    b.Property<string>("NomeSetor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_SETOR");

                    b.HasKey("IdSetor");

                    b.HasIndex("AmbienteId");

                    b.ToTable("TB_SETOR", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Tarefa", b =>
                {
                    b.Property<int>("IdTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TAREFA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarefa"));

                    b.Property<DateTime>("DataCriacaoTarefa")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CRIACAO_TAREFA");

                    b.Property<DateTime?>("DataFinalTarefa")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FINAL_TAREFA");

                    b.Property<DateTime?>("DataPrevistaTarefa")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_PREVISTA_TAREFA");

                    b.Property<string>("DescricaoTarefa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO_TAREFA");

                    b.Property<string>("NomeTarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_TAREFA");

                    b.Property<string>("PrioridadeTarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRIORIDADE_TAREFA");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("SituacaoTarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SITUACAO_TAREFA");

                    b.HasKey("IdTarefa");

                    b.HasIndex("ProjetoId");

                    b.ToTable("TB_TAREFA", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<DateTime>("DataCriacaoUsuario")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CRIACAO_USUARIO");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL_USUARIO");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_USUARIO");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SENHA_USUARIO");

                    b.HasKey("IdUsuario");

                    b.ToTable("TB_USUARIO", (string)null);
                });

            modelBuilder.Entity("TB_ACESSO_USUARIO", b =>
                {
                    b.Property<int>("ACESSO_ID")
                        .HasColumnType("int");

                    b.Property<int>("USUARIO_ID")
                        .HasColumnType("int");

                    b.HasKey("ACESSO_ID", "USUARIO_ID");

                    b.HasIndex("USUARIO_ID");

                    b.ToTable("TB_ACESSO_USUARIO", (string)null);
                });

            modelBuilder.Entity("TB_EQUIPE_PROJETO", b =>
                {
                    b.Property<int>("EQUIPE_ID")
                        .HasColumnType("int");

                    b.Property<int>("PROJETO_ID")
                        .HasColumnType("int");

                    b.HasKey("EQUIPE_ID", "PROJETO_ID");

                    b.HasIndex("PROJETO_ID");

                    b.ToTable("TB_EQUIPE_PROJETO", (string)null);
                });

            modelBuilder.Entity("TB_EQUIPE_USUARIO", b =>
                {
                    b.Property<int>("EQUIPE_ID")
                        .HasColumnType("int");

                    b.Property<int>("USUARIO_ID")
                        .HasColumnType("int");

                    b.HasKey("EQUIPE_ID", "USUARIO_ID");

                    b.HasIndex("USUARIO_ID");

                    b.ToTable("TB_EQUIPE_USUARIO", (string)null);
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Equipe", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Setor", "Setor")
                        .WithMany("Equipes")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.HistoricoTarefa", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Tarefa", "Tarefa")
                        .WithMany("HistoricoTarefas")
                        .HasForeignKey("TarefaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Mensagem", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Tarefa", "Tarefa")
                        .WithMany("Mensagems")
                        .HasForeignKey("TarefaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Setor", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Ambiente", "Ambiente")
                        .WithMany("Setores")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Tarefa", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("TB_ACESSO_USUARIO", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Acesso", null)
                        .WithMany()
                        .HasForeignKey("ACESSO_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ACESSO_ID");

                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("USUARIO_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USUARIO_ID");
                });

            modelBuilder.Entity("TB_EQUIPE_PROJETO", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Equipe", null)
                        .WithMany()
                        .HasForeignKey("EQUIPE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EQUIPE_ID");

                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Projeto", null)
                        .WithMany()
                        .HasForeignKey("PROJETO_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PROJETO_ID");
                });

            modelBuilder.Entity("TB_EQUIPE_USUARIO", b =>
                {
                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Equipe", null)
                        .WithMany()
                        .HasForeignKey("EQUIPE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EQUIPE_ID");

                    b.HasOne("TASKWAVE.API.Infrastructure.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("USUARIO_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USUARIO_ID");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Ambiente", b =>
                {
                    b.Navigation("Setores");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Setor", b =>
                {
                    b.Navigation("Equipes");
                });

            modelBuilder.Entity("TASKWAVE.API.Infrastructure.Model.Tarefa", b =>
                {
                    b.Navigation("HistoricoTarefas");

                    b.Navigation("Mensagems");
                });
#pragma warning restore 612, 618
        }
    }
}
