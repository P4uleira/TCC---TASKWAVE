@page "/RecuperarSenha"
@rendermode InteractiveServer
@inject HttpClient Http
@layout EmptyLayout

<div class="d-flex justify-content-center w-100">
    <div class="row login_card">
        <div class="login_card_form">
            <div>
					<div class="mt-5 mb-4 mx-lg-5">
						<h2 class="w-75 text-white">
							Recupe sua conta TaskWave
						</h2>
					</div>
				</div>

            <div class="mx-lg-5">
                <EditForm Model="@model" FormName="RecuperarSenhaForm" OnValidSubmit="HandleSubmit">                    
                    <DataAnnotationsValidator />

                    <div class="form-group w-100">
                        <p class="text-white fs-5 text-center mt-5">Para recuperar sua conta, insira seu email cadastrado no sistema.</p>
                        <label class="text-white fs-5" for="email">E-mail</label>
                        <InputText id="email" type="email" class="text-white form-control shadow-none bg-transparent border-0 border-bottom rounded-0" @bind-Value="model.Email" />
                        <ValidationMessage For="@(() => model.Email)" class="text-white" />
                    </div>

                    @if (!string.IsNullOrWhiteSpace(Mensagem))
                    {
                        <div class="@MensagemClasse mt-3">@Mensagem</div>
                    }

                    <div class="d-flex align-items-center flex-column mt-xl-5">
                        <button type="submit" class="btn btn-primary rounded-3 w-50 rounded-pill fs-4">Enviar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private SolicitarRedefinicaoSenhaDTO model = new();
    private string Mensagem = string.Empty;
    private string MensagemClasse = string.Empty;

    private async Task HandleSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/RedefinicaoSenha/Solicitar", model);

            if (response.IsSuccessStatusCode)
            {
                Mensagem = "Verifique seu e-mail. Enviamos um link para redefinir sua senha.";
                MensagemClasse = "text-success";
            }
            else
            {
                var erro = await response.Content.ReadAsStringAsync();
                Mensagem = erro;
                MensagemClasse = "text-danger";
            }
        }
        catch (Exception ex)
        {
            Mensagem = "Erro ao enviar solicitação: " + ex.Message;
            MensagemClasse = "text-danger";
        }
    }
    
}

<style>

    body {
        background-color: #333339;
        font-family: Verdana;
    }

    .login_card {
        width: 75%;
        margin-top: 55px;
        background-color: #748CAB;
        border-radius: 20px;
        min-height: 65vh;
        max-width: 650px;
    }

    .login_card_form {
        background-color: #3E5C76;
        border-radius: 20px;
    }
</style>